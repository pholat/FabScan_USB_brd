Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o (exit)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
                              ./usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                              ./usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               ./usbdrv/usbdrv.o
buff                0x1               ./main.o
currStepper         0x2               ./main.o
usbDeviceAddr       0x1               ./usbdrv/usbdrv.o
usbRxToken          0x1               ./usbdrv/usbdrv.o
usbInputBufOffset   0x1               ./usbdrv/usbdrv.o
usbMsgPtr           0x2               ./usbdrv/usbdrv.o
usbRxLen            0x1               ./usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               ./usbdrv/usbdrv.o
usbCurrentTok       0x1               ./usbdrv/usbdrv.o
usbConfiguration    0x1               ./usbdrv/usbdrv.o
usbRxBuf            0x16              ./usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
LOAD ./usbdrv/oddebug.o
LOAD ./usbdrv/usbdrv.o
LOAD ./usbdrv/usbdrvasm.o
LOAD ./fabscan.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x768
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000026       0x1a ./fabscan.o
 *(.progmem*)
 .progmem.data  0x00000040       0x52 ./usbdrv/usbdrv.o
                0x00000040                usbDescriptorString0
                0x00000044                usbDescriptorStringVendor
                0x00000064                usbDescriptorStringDevice
                0x0000006e                usbDescriptorDevice
                0x00000080                usbDescriptorConfiguration
                0x00000092                . = ALIGN (0x2)
                0x00000092                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000092        0x0 linker stubs
 *(.trampolines*)
                0x00000092                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000092                __ctors_start = .
 *(.ctors)
                0x00000092                __ctors_end = .
                0x00000092                __dtors_start = .
 *(.dtors)
                0x00000092                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000092        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
                0x00000092                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000092        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000009a       0x16 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
                0x0000009a                __do_copy_data
 .init4         0x000000b0       0x10 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x000000b0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c0        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x000000c4        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
                0x000000c4                __vector_12
                0x000000c4                __bad_interrupt
                0x000000c4                __vector_6
                0x000000c4                __vector_3
                0x000000c4                __vector_11
                0x000000c4                __vector_13
                0x000000c4                __vector_17
                0x000000c4                __vector_7
                0x000000c4                __vector_5
                0x000000c4                __vector_4
                0x000000c4                __vector_9
                0x000000c4                __vector_2
                0x000000c4                __vector_15
                0x000000c4                __vector_8
                0x000000c4                __vector_14
                0x000000c4                __vector_10
                0x000000c4                __vector_16
                0x000000c4                __vector_18
 .text          0x000000c6        0x0 ./usbdrv/oddebug.o
 .text          0x000000c6        0x0 ./usbdrv/usbdrv.o
 .text          0x000000c6      0x28c ./usbdrv/usbdrvasm.o
                0x000000c6                usbCrc16
                0x000000f0                usbCrc16Append
                0x000000f8                __vector_1
 .text          0x00000352        0x0 ./fabscan.o
 .text          0x00000352        0x0 ./main.o
 .text          0x00000352        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .text          0x00000352        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .text          0x00000352        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x00000352                . = ALIGN (0x2)
 *(.text.*)
 .text.usbPoll  0x00000352      0x1ca ./usbdrv/usbdrv.o
                0x00000352                usbPoll
 .text.usbInit  0x0000051c        0xe ./usbdrv/usbdrv.o
                0x0000051c                usbInit
 .text.direction_cw
                0x0000052a       0x1c ./fabscan.o
                0x0000052a                direction_cw
 .text.direction_ccw
                0x00000546       0x1c ./fabscan.o
                0x00000546                direction_ccw
 .text.stepper_on
                0x00000562       0x1c ./fabscan.o
                0x00000562                stepper_on
 .text.stepper_off
                0x0000057e       0x1c ./fabscan.o
                0x0000057e                stepper_off
 .text.single_step
                0x0000059a       0x46 ./fabscan.o
                0x0000059a                single_step
 .text.step     0x000005e0       0x24 ./fabscan.o
                0x000005e0                step
 .text.fabscan_setup
                0x00000604       0x2e ./fabscan.o
                0x00000604                fabscan_setup
 .text.fabscan_typAction
                0x00000632       0x64 ./fabscan.o
                0x00000632                fabscan_typAction
 .text.fabscan_work
                0x00000696       0x74 ./fabscan.o
                0x00000696                fabscan_work
 .text.usbFunctionSetup
                0x0000070a       0x14 ./main.o
                0x0000070a                usbFunctionSetup
 .text.usbFunctionWrite
                0x0000071e        0xc ./main.o
                0x0000071e                usbFunctionWrite
 .text.main     0x0000072a       0x3a ./main.o
                0x0000072a                main
 .text.libgcc   0x00000764        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000764        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000764        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x00000764                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000764        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
                0x00000764                exit
                0x00000764                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000764        0x4 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000768                _etext = .

.data           0x00800060       0x24 load address 0x00000768
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
 .data          0x00800060        0x0 ./usbdrv/oddebug.o
 .data          0x00800060        0x0 ./usbdrv/usbdrv.o
 .data          0x00800060        0x0 ./usbdrv/usbdrvasm.o
 .data          0x00800060        0x0 ./fabscan.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.usbTxLen
                0x00800060        0x1 ./usbdrv/usbdrv.o
                0x00800060                usbTxLen
 .data.usbMsgLen
                0x00800061        0x1 ./usbdrv/usbdrv.o
 .data.byteType
                0x00800062        0x2 ./main.o
                0x00800062                byteType
 .data.replyBuf
                0x00800064       0x20 ./main.o
                0x00800064                replyBuf
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800084                . = ALIGN (0x2)
                0x00800084                _edata = .
                0x00800084                PROVIDE (__data_end, .)

.bss            0x00800084       0x32
                0x00800084                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800084        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o
 .bss           0x00800084        0x0 ./usbdrv/oddebug.o
 .bss           0x00800084        0x0 ./usbdrv/usbdrv.o
 .bss           0x00800084        0x0 ./usbdrv/usbdrvasm.o
 .bss           0x00800084        0x0 ./fabscan.o
 .bss           0x00800084        0x0 ./main.o
 .bss           0x00800084        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .bss           0x00800084        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .bss           0x00800084        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.usbMsgFlags
                0x00800084        0x1 ./usbdrv/usbdrv.o
 .bss.fab_work_flag
                0x00800085        0x1 ./main.o
                0x00800085                fab_work_flag
 .bss.incomingByte
                0x00800086        0x2 ./main.o
                0x00800086                incomingByte
 .bss.dataReceived
                0x00800088        0x1 ./main.o
 *(COMMON)
 COMMON         0x00800089       0x2a ./usbdrv/usbdrv.o
                0x00800089                usbTxBuf
                0x00800094                usbDeviceAddr
                0x00800095                usbRxToken
                0x00800096                usbInputBufOffset
                0x00800097                usbMsgPtr
                0x00800099                usbRxLen
                0x0080009a                usbNewDeviceAddr
                0x0080009b                usbCurrentTok
                0x0080009c                usbConfiguration
                0x0080009d                usbRxBuf
 COMMON         0x008000b3        0x3 ./main.o
                0x008000b3                buff
                0x008000b4                currStepper
                0x008000b6                PROVIDE (__bss_end, .)
                0x00000768                __data_load_start = LOADADDR (.data)
                0x0000078c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000b6        0x0
                0x008000b6                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000b6                PROVIDE (__noinit_end, .)
                0x008000b6                _end = .
                0x008000b6                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6b4
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn2313.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(avr_at2313_vusb_fabscan.elf elf32-avr)
LOAD linker stubs
